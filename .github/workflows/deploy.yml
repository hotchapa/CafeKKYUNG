name: CI/CD Pipeline

on:
  push:
    branches:
      - backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18.17.0"
      - run: npm install -g pnpm
      - run: pnpm install
      - run: pnpm run build
      - run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      - run: docker build -t hotchapa/kkyungsquare-nest:latest .
      - run: docker push hotchapa/kkyungsquare-nest:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
        with:
          path: back
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - run: echo "${{ secrets.EC2_KEY }}" > private_key.pem
      - run: |
          chmod 400 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # # 기존 docker-compose 바이너리 제거
            # sudo rm /usr/local/bin/docker-compose
            
            # # docker-compose 바이너리 다시 설치
            # sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            # sudo chmod +x /usr/local/bin/docker-compose

            # 프로젝트 디렉토리 설정
            mkdir -p /home/ubuntu/project
            cd /home/ubuntu/project

            # 도커 이미지 풀 및 Compose 파일 추출
            docker pull hotchapa/kkyungsquare-nest:latest
            docker run --rm -v $(pwd):/extract hotchapa/kkyungsquare-nest:latest cp /usr/src/app/docker-compose.yml /extract

            # 환경 변수 설정
            echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" > .env
            echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
            echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
            echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
            echo "DB_HOST=db" >> .env
            echo "DB_PORT=3306" >> .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env

            # Docker Compose 실행
            /usr/local/bin/docker-compose -f /home/ubuntu/project/docker-compose.yml up -d

            # 도커 이미지 정리
            docker image prune -f
          EOF
